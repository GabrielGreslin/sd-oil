---
title: "Untitled"
output: pdf_document
---
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r}
summary(cars)
```
You can also embed plots, for example:
```{r, echo=FALSE}
plot(cars)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
source('~/SUPAERO 3A/cours/sd/aro/statistiques/2-analyses-factorielles/tp_ACC.2.R', echo=TRUE)
source('~/SUPAERO 3A/cours/sd/aro/statistiques/2-analyses-factorielles/tp_ACC.2.R', echo=TRUE)
source('~/SUPAERO 3A/cours/sd/aro/statistiques/2-analyses-factorielles/tp_ACC.2.R', echo=TRUE)
View(X)
?pixmap
??pixmap
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/5-Neural-network/tp.R', echo=TRUE)
?neuralnet
?nnet
sin(3)
sin(pi)
sin(pi/2)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/5-Neural-network/tp.R', echo=TRUE)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/5-Neural-network/tp.R', echo=TRUE)
library(neuralnet)
# Generate data
traininginput = as.data.frame(runif(50, min=0, max=100))
trainingoutput = sin(traininginput)
trainingdata = cbind(traininginput, trainingoutput)
colnames(trainingdata) = c('Input', 'Output')
# Learn
net.sqrt = neuralnet(Output~Input, trainingdata, hidden=10, threshold=0.01)
print(net.sqrt)
# Check
plot(net.sqrt)
# Test
testdata = as.data.frame((1:10^2))
net.results = compute(net.sqrt, testdata)
ls(net.results)
print(net.results$net.result)
# Pretty results presentation
error = (sin(testdata)-net.results$net.result)/sin(testdata)
cleanoutput = cbind(testdata, sin(testdata), as.data.frame(net.results$net.result), error*100)
colnames(cleanoutput) = c('Input', 'Expected Output', 'Neural Net Output', 'Relative error (%)')
print(cleanoutput)
plot(x = t(testdata), y = t(sin(testdata)))
lines(x = t(testdata), y = t(net.results$net.result), col=c('red'))
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/5-Neural-network/tp.R', echo=TRUE)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/5-Neural-network/tp.R', echo=TRUE)
library(neuralnet)
# Generate data
traininginput = as.data.frame(runif(50, min=0, max=100))/100*3*pi
trainingoutput = sin(traininginput)
trainingdata = cbind(traininginput, trainingoutput)
colnames(trainingdata) = c('Input', 'Output')
# Learn
net.sqrt = neuralnet(Output~Input, trainingdata, hidden=10, threshold=0.01)
print(net.sqrt)
# Check
plot(net.sqrt)
# Test
testdata = as.data.frame((1:10^2))
net.results = compute(net.sqrt, testdata)
ls(net.results)
print(net.results$net.result)
# Pretty results presentation
error = (sin(testdata)-net.results$net.result)/sin(testdata)
cleanoutput = cbind(testdata, sin(testdata), as.data.frame(net.results$net.result), error*100)
colnames(cleanoutput) = c('Input', 'Expected Output', 'Neural Net Output', 'Relative error (%)')
print(cleanoutput)
plot(x = t(testdata), y = t(sin(testdata)))
lines(x = t(testdata), y = t(net.results$net.result), col=c('red'))
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
setwd("~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis")
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
head(data)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
row.names(label$V1) = label
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
head(data)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
data$names
data$name
label$name
View(data)
View(data)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
row.names(label)
label
head(label)
count(label[label$V1 == 0, ])
length(label[label$V1 == 0, ])
length(label[label$V1 == 1, ])
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
row.name(label)
row.names(label)
row.names(data)
colnames(data)
colnames(label)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
colnames(data)
data['nabel',]
data['label',]
data[,'label']
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
data_0 = data[data$label == 0, ];
data_1 = data[data$label == 1, ];
nb_0 = length(data_0)
nb_1 = length(data_1)
nb_0
nb_1
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
header(data)
head(data)
head(data[data$label == 0, ])
length(data[data$label == 0, ])
length(data[data$label == 1, ])
length(data)
size(data)
dim(data)
nrow(data)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
nb_0 = nrow(data_0)
nb_1 = nrow(data_1)
total = nb_0 + nb_1
nb_0
nb_1
total
perentage_0 = 100 * nb_0 / total
perentage_1 = 100 * nb_1 / total
perentage_0
perentage_1
boxplot(data)
boxplot(data$label)
boxplot(data$V1)
for (col in colnames(data)) {
boxplot(data[col])
}
for (col in colnames(data)) {
boxplot(data[col])
}
summarie(data)
summaries(data)
summary(data)
boxplot(x, use.cols = TRUE)
boxplot(data, use.cols = TRUE)
boxplot(data)
boxplot(label)
boxplot(data)
type
typeof(data)
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
boxplot(data)
typeof(data)
library(ggplot2)
data$group <- row.names(data)
data.m <- melt(data, id.vars = "group")
ggplot(data.m, aes(group, value)) + geom_boxplot()
library(ggplot2)
data$group <- row.names(data)
data_ <- melt(data, id.vars = "group")
ggplot(data_, aes(group, value)) + geom_boxplot()
source('~/SUPAERO 3A/cours/sd/aro/supervized-ml/sd-oil/analysis/analysis.R', echo=TRUE)
x = c(1, 2, 3, 4, 5)
y0 = c(10, 15, 12, 17, 8)
y1 = c(11, 12, 8, 15, 10)
plot(x, y0, y1)
plot(x, y0)
plot(x, y0, c = 'r')
lines(x, yo, c = 'b')
plot(x, y0, c = 'r')
lines(x, y1, c = 'b')
x = c(1, 2, 3, 4, 5)
y0 = c(10, 15, 12, 17, 8)
y1 = c(11, 12, 8, 15, 10)
plot(x, y0, c = 'r')
lines(x, y1, c = 'b')
?plot
plot(x, y0, col = 'r')
lines(x, y1, col = 'b')
plot(x, y0, col = 'r')
lines(x, y1, col = 'blue')
?readLines
readLines(con = stdin(), n = -1L, ok = TRUE, warn = TRUE,
encoding = "unknown", skipNul = FALSE)
